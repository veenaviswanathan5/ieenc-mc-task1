#include <stdio.h>

// Function to swap two elements using indices
void swap(int arr[], int i, int j) {
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
}

// Function to reverse the array elements from start to end
void reverse(int arr[], int start, int end) {
    while (start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
}

// Function to find the next permutation of the given array
void nextPermutation(int arr[], int n) {
    int i = n - 2;

    // Step 1: Find the first decreasing element from the right
    while (i >= 0 && arr[i] >= arr[i + 1]) {
        i--;
    }

    if (i >= 0) {
        // Step 2: Find the smallest element greater than arr[i] to the right
        int j = n - 1;
        while (arr[j] <= arr[i]) {
            j--;
        }
        // Step 3: Swap arr[i] and arr[j]
        swap(arr, i, j);
    }

    // Step 4: Reverse the elements to the right of i
    reverse(arr, i + 1, n - 1);
}

int main() {
    int n;

    // Input the size of the array
    printf("Enter the size of the array: ");
    scanf("%d", &n);

    int arr[100]; // Assume the array size won't exceed 100

    // Input the elements of the array
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Find the next permutation
    nextPermutation(arr, n);

    // Print the resulting permutation
    printf("Next permutation: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
